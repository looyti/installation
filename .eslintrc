{
  // Temel kuralların ve genişletmelerin tanımlandığı yer
  "extends": [
    "eslint:recommended", // ESLint'in temel önerilen kuralları
    "plugin:react/recommended", // React projeleri için önerilen kurallar
    "plugin:@typescript-eslint/recommended", // TypeScript için önerilen kurallar
    "plugin:tailwindcss/recommended", // Tailwind CSS ile ilgili önerilen kurallar
    "plugin:jsx-a11y/recommended", // Erişilebilirlik (a11y) için önerilen kurallar
    "plugin:react-hooks/recommended" // React Hooks kullanımına yönelik kurallar
  ],
  "root": true, // Bu yapılandırmayı geçersiz kılacak üst bir yapılandırma olmadığını belirtir
  "parserOptions": {
    "ecmaVersion": "latest", // Modern ECMAScript özelliklerini destekler
    "sourceType": "module", // ES6 modüllerini desteklemek için
    "ecmaFeatures": {
      "jsx": true // JSX sözdizimini destekler
    }
  },
  "env": {
    "browser": true, // Tarayıcı ortamı
    "commonjs": true, // CommonJS modüllerini desteklemek için
    "es6": true, // ECMAScript 6 özelliklerini destekler
    "jest": true // Jest test çerçevesine uygun ortam
  },
  "plugins": [
    "react", // React'e özgü ESLint kuralları
    "jsx-a11y", // Erişilebilirlik için kurallar
    "tailwindcss", // Tailwind CSS kullanımı için kurallar
    "@typescript-eslint", // TypeScript ile ilgili kurallar
    "import" // İthalat düzenleme ve sıralama kuralları
  ],
  "settings": {
    "react": {
      "version": "detect" // React sürümünü otomatik algılar
    },
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json" // TypeScript yapılandırma dosyasını kullanır
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"] // Desteklenen dosya uzantıları
      }
    }
  },
  "overrides": [
    {
      "files": ["**/*.{js,jsx,ts,tsx}"],
      "extends": [
        "plugin:react/recommended",
        "plugin:jsx-a11y/recommended",
        "plugin:react-hooks/recommended"
      ],
      "settings": {
        "react": { "version": "detect" },
        "import/resolver": {
          "typescript": {}, // TypeScript dosyalarını çözümlemek için
          "node": { "extensions": [".js", ".jsx", ".ts", ".tsx"] }
        }
      }
    },
    {
      "files": ["**/*.{ts,tsx}"],
      "parser": "@typescript-eslint/parser", // TypeScript için özel parser
      "extends": [
        "plugin:@typescript-eslint/recommended", // TypeScript için önerilen kurallar
        "plugin:import/recommended", // İthalat düzenlemeleri için kurallar
        "plugin:import/typescript" // TypeScript import kuralları
      ],
      "rules": {
        "import/order": [
          "error",
          {
            // İthalat sıralama kuralı
            "alphabetize": { "order": "asc" } // Alfabetik sıralama
          }
        ]
      }
    },
    {
      "files": ["*.test.{js,ts,jsx,tsx}"],
      "env": { "jest": true }, // Jest test ortamı
      "plugins": ["jest"], // Jest kuralları
      "extends": ["plugin:jest/recommended"] // Jest için önerilen kurallar
    },
    {
      "files": [".eslintrc.cjs"],
      "env": {
        "node": true // Node.js ortamı
      }
    }
  ]
}
